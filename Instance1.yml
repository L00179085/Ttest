AWSTemplateFormatVersion: "2010-09-09"
Description: Jumpbox -public facing ubuntu OS -Template for creating ec2 instance, security group. 


Parameters:
  VPCId:
    Description: Name of VPC Id Output
    Type: String
    #Default: demoVPC1ID

  CidrBlock: 
    Description: Name of CidrBlock Output
    Type: String
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: "must be a valid IP CIDR range of the form x.x.x.x/x."
    #Default: 10.0.0.0/24
  
  GatewayId:
    Description: Name of variable for (NAT) Gateway Id from Output
    Type: String

  SubnetId:
    Description: Name of the variable for Subnet Id to Output
    Type: String  

Resources:

  # an EC2 instance depending on the below security group
  ec2Instance:
    Type: AWS::EC2::Instance
    DependsOn: ["securityGroup","Subnet"]
    Properties:
      InstanceType: "t3.micro"
      ImageId:  "ami-0fe8bec493a81c7da"
      KeyName: "AWS_keypair"
      SecurityGroupIds: 
        - !Ref securityGroup
      SubnetId: !Ref Subnet
  
      Tags:
        - Key: "Name"
          Value: "instanceJK"
        - Key: "Project"
          Value: "atudevopsdemo"  

 # security group starts here
  securityGroup:
    # security group for the above ec2 instance
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh to client host
      VpcId: 
        Fn::ImportValue: !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80    #webpage browser host 
          ToPort: 80
          CidrIp: "10.0.0.0/0"
        - IpProtocol: tcp
          FromPort: 22  #ssh connection port
          ToPort: 22
          CidrIp: "0.0.0.0/0"   # later 10.0.0.0/24  ---only jump box ---jol
 
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: "10.0.0.0/0"
        - IpProtocol: tcp
          FromPort: 22  #ssh connection port
          ToPort: 22
          CidrIp: "10.0.1.0/24"
        - IpProtocol: tcp
          FromPort: 22  #ssh connection port
          ToPort: 22
          CidrIp: "10.0.2.0/24"
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: "0.0.0.0/0" 


 # Subnet config
  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
     # DependsOn: ["demoVPC1"]
      VpcId: 
        Fn::ImportValue: !Ref VPCId
      #CidrBlock: 10.0.0.0/24
      CidrBlock: !Ref CidrBlock

      AvailabilityZone: eu-north-1a
      MapPublicIpOnLaunch: true    #for jumpbox subnet public(true) for other box set as false
      Tags:
       - Key: Project
         Value: atudevopsdemo1Subnet
       - Key: Name
         Value: SubnetId
 
  # RouteTable for Subnet
  RouteTable:
    Type: AWS::EC2::RouteTable
   # DependsOn: ["demoVPC1"]
    Properties:
      VpcId:
        Fn::ImportValue: !Ref VPCId
      Tags:
       - Key: Project
         Value: atudevopsdemo1RouteTable
       - Key: Name
         Value: RouteTableId
 
  # Associate Subnet and Routetable
  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn: ["Subnet","RouteTable"]
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet

  GatewayRoute:
    Type: AWS::EC2::Route
    #Condition: CreatePublicRoute
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Fn::ImportValue: !Ref GatewayId
# Exports
Outputs:
  Subnet:
    Description: Subnet Id
    Value:
      Ref: Subnet
    Export:
      Name: !Ref SubnetId